name: deploy

on:
  push:
    branches:
      - main # sub-branch[branch name] 브랜치에서 push 이벤트가 일어났을 때 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@master

      - name: Cache node modules # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-master-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install Dependencies # node module install
        run: yarn

      - name: Generate Environment Variables File for Production
        run: |
          echo "NEXT_PUBLIC_ENDPOINT_URL_DEV=$NEXT_PUBLIC_ENDPOINT_URL_DEV" >> .env
          echo "NEXT_PUBLIC_ENDPOINT_URL_PRODUCTION=$NEXT_PUBLIC_ENDPOINT_URL_PRODUCTION" >> .env
          echo "NEXT_PUBLIC_PRODUCTION_URL=$NEXT_PUBLIC_PRODUCTION_URL" >> .env
          echo "NEXT_PUBLIC_SUPABASE_JWT=$NEXT_PUBLIC_SUPABASE_JWT" >> .env
        env:
          NEXT_PUBLIC_ENDPOINT_URL_DEV: ${{ secrets.NEXT_PUBLIC_ENDPOINT_URL_DEV }}
          NEXT_PUBLIC_ENDPOINT_URL_PRODUCTION: ${{ secrets.NEXT_PUBLIC_ENDPOINT_URL_PRODUCTION }}
          NEXT_PUBLIC_PRODUCTION_URL: ${{ secrets.NEXT_PUBLIC_PRODUCTION_URL }}
          NEXT_PUBLIC_SUPABASE_JWT: ${{ secrets.NEXT_PUBLIC_SUPABASE_JWT }}

      - name: Build # project build
        run: yarn build

      - uses: actions/checkout@v2

      - name: Install Node.js
        run: sudo apt-get install nodejs

      - name: Install the required modules
        run: npm install

      - name: Insert code into head
        run: node insert-code.js

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --recursive \
          --region ap-northeast-2 \
          dist s3://job-bot.site

      - name: invalidate
        env:
          PATHS: './index.html'
          AWS_REGION: 'ap-northeast-2'
          DISTRIBUTION: ${{ secrets.DISTRIBUTION_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
